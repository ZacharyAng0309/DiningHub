@using DiningHub.Helpers
@model PaginatedList<DiningHub.Models.InventoryItem>

@{
    ViewData["Title"] = "Manage Inventory";
}

<head>
    <link rel="stylesheet" href="~/css/admin.css" asp-append-version="true" />
</head>

<div class="container">
    <div class="table-wrapper">
        <div class="table-title">
            <div class="row d-flex justify-content-between align-items-center">
                <div class="col-sm-8">
                    <h2>Manage Inventory</h2>
                </div>
                <div class="col-sm-4 text-end">
                    <a asp-action="Create" class="btn btn-success">Create New Inventory Item</a>
                </div>
            </div>
        </div>

        <form method="get">
            <div class="row mb-3">
                <div class="col-sm-4">
                    <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" class="form-control" placeholder="Search by name or description" />
                </div>
                <div class="col-sm-4">
                    <select name="categoryId" class="form-select">
                        <option value="">All Categories</option>
                        @foreach (var category in ViewBag.Categories)
                        {
                            bool selected = category.CategoryId == (int?)ViewData["CurrentCategory"];
                            <option value="@category.CategoryId" selected="@(selected ? "selected" : "")">@category.Name</option>
                        }
                    </select>
                </div>
                <div class="col-sm-4 text-end">
                    <button type="submit" class="btn btn-primary">Filter</button>
                </div>
            </div>
        </form>

        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">
                            Name
                            @if (ViewData["CurrentSort"]?.ToString() == "name_desc")
                            {
                                <i class="bi bi-arrow-down"></i>
                            }
                            else
                            {
                                <i class="bi bi-arrow-up"></i>
                            }
                        </a>
                    </th>
                    <th>Description</th>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@ViewData["QuantitySortParm"]">
                            Quantity
                            @if (ViewData["CurrentSort"]?.ToString() == "quantity_desc")
                            {
                                <i class="bi bi-arrow-down"></i>
                            }
                            else
                            {
                                <i class="bi bi-arrow-up"></i>
                            }
                        </a>
                    </th>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@ViewData["LastUpdatedSortParm"]">
                            Last Updated
                            @if (ViewData["CurrentSort"]?.ToString() == "last_updated_desc")
                            {
                                <i class="bi bi-arrow-down"></i>
                            }
                            else
                            {
                                <i class="bi bi-arrow-up"></i>
                            }
                        </a>
                    </th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.Name</td>
                        <td>@item.Description</td>
                        <td>@item.Quantity</td>
                        <td>@item.UpdatedAt.ToString("g")</td>
                        <td>
                            <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#detailsModal-@item.InventoryItemId">Details</button>
                            <a asp-action="Edit" asp-route-id="@item.InventoryItemId" class="btn btn-primary">Edit</a>
                            <form method="post" asp-action="Delete" asp-route-id="@item.InventoryItemId" class="d-inline">
                                <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this inventory item?');">Delete</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="d-flex justify-content-center">
            <nav>
                <ul class="pagination">
                    @if (Model.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="/manage/inventory?page=@(Model.PageIndex - 1)@(string.IsNullOrEmpty(ViewData["CurrentSort"]?.ToString()) ? "" : "&sortOrder=" + ViewData["CurrentSort"])@(string.IsNullOrEmpty(ViewData["CurrentFilter"]?.ToString()) ? "" : "&searchString=" + ViewData["CurrentFilter"])@(ViewData["CurrentCategory"] == null ? "" : "&categoryId=" + ViewData["CurrentCategory"])">Previous</a>
                        </li>
                    }
                    @for (var i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                            <a class="page-link" href="/manage/inventory?page=@i@(string.IsNullOrEmpty(ViewData["CurrentSort"]?.ToString()) ? "" : "&sortOrder=" + ViewData["CurrentSort"])@(string.IsNullOrEmpty(ViewData["CurrentFilter"]?.ToString()) ? "" : "&searchString=" + ViewData["CurrentFilter"])@(ViewData["CurrentCategory"] == null ? "" : "&categoryId=" + ViewData["CurrentCategory"])">@i</a>
                        </li>
                    }
                    @if (Model.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="/manage/inventory?page=@(Model.PageIndex + 1)@(string.IsNullOrEmpty(ViewData["CurrentSort"]?.ToString()) ? "" : "&sortOrder=" + ViewData["CurrentSort"])@(string.IsNullOrEmpty(ViewData["CurrentFilter"]?.ToString()) ? "" : "&searchString=" + ViewData["CurrentFilter"])@(ViewData["CurrentCategory"] == null ? "" : "&categoryId=" + ViewData["CurrentCategory"])">Next</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>

    </div>
</div>

@foreach (var item in Model)
{
    <div class="modal fade" id="detailsModal-@item.InventoryItemId" tabindex="-1" aria-labelledby="detailsModalLabel-@item.InventoryItemId" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="detailsModalLabel-@item.InventoryItemId">Details - @item.Name</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <h2>Inventory Item Details</h2>
                    <hr />
                    <div>
                        <dl class="row">
                            <dt class="col-sm-2">Name</dt>
                            <dd class="col-sm-10">@item.Name</dd>
                            <dt class="col-sm-2">Description</dt>
                            <dd class="col-sm-10">@item.Description</dd>
                            <dt class="col-sm-2">Quantity</dt>
                            <dd class="col-sm-10">@item.Quantity</dd>
                            <dt class="col-sm-2">Created By</dt>
                            <dd class="col-sm-10">@item.CreatedBy.UserName</dd>
                            <dt class="col-sm-2">Created At</dt>
                            <dd class="col-sm-10">@item.CreatedAt.ToString("g")</dd>
                            <dt class="col-sm-2">Last Updated</dt>
                            <dd class="col-sm-10">@item.UpdatedAt.ToString("g")</dd>
                            <dt class="col-sm-2">Last Updated By</dt>
                            <dd class="col-sm-10">@item.LastUpdatedBy.UserName</dd>
                        </dl>
                    </div>
                </div>
                <div class="modal-footer">
                    <a asp-action="Edit" asp-route-id="@item.InventoryItemId" class="btn btn-primary">Edit</a>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}
