@model DiningHub.Models.MenuItem

@{
    ViewData["Title"] = $"Edit Menu Item - {Model.Name}";
}

<div class="container-fluid shadow rounded-3 mb-5 bg-white pt-4 pb-4">
    <div class="table-wrapper">
        <div class="table-title">
            <div class="row d-flex justify-content-between align-items-center">
                <div class="col-sm-8">
                    <h2>Edit Menu Item</h2>
                </div>
                <div class="col-sm-4 text-end">
                    <a asp-action="Index" class="btn btn-secondary btn-lg rounded-pill col-6">Back to List</a>
                </div>
            </div>
        </div>
        <div class="mt-4">
            <form asp-action="Edit" method="post" enctype="multipart/form-data">
                <input type="hidden" asp-for="MenuItemId" />
                <input type="hidden" asp-for="ImageUrl" id="ImageUrl" value="@Model.ImageUrl" />

                <div class="form-group mb-4">
                    <label asp-for="Name" class="form-label"></label>
                    <input asp-for="Name" class="form-control rounded-pill" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <div class="form-group mb-4">
                    <label asp-for="Description" class="form-label"></label>
                    <input asp-for="Description" class="form-control rounded-pill" />
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>

                <div class="form-group mb-4">
                    <label asp-for="Price" class="form-label"></label>
                    <input asp-for="Price" type="number" class="form-control rounded-pill" />
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>

                <div class="form-group mb-4">
                    <label asp-for="CategoryId" class="form-label">Category</label>
                    <select asp-for="CategoryId" class="form-control rounded-pill">
                        @foreach (var category in ViewBag.Categories)
                        {
                            <option value="@category.Value" selected="@(category.Value == Model.CategoryId.ToString())">@category.Text</option>
                        }
                    </select>
                    <span asp-validation-for="CategoryId" class="text-danger"></span>
                </div>

                <div class="form-group mb-4">
                    <label class="form-label" for="imageUpload">Image</label>
                    <input type="file" class="form-control rounded-pill" accept="image/*" onchange="uploadImage(event)" id="imageUpload" />
                    <span asp-validation-for="ImageUrl" class="text-danger"></span>
                    <img id="imagePreview" src="@Model.ImageUrl" alt="Image Preview" class="img-thumbnail mt-2" style="max-width: 100px;" />
                    <div id="loadingContainer" class="mt-2" style="display:none;">
                        <div class="spinner-border text-primary" role="status">
                        </div>
                        <span class="ms-2 text-primary">Loading...</span>
                    </div>
                </div>

                <div class="form-group form-check mb-4">
                    <input asp-for="IsAvailable" class="form-check-input" type="checkbox" />
                    <label asp-for="IsAvailable" class="form-check-label"></label>
                    <span asp-validation-for="IsAvailable" class="text-danger"></span>
                </div>

                <div class="form-group text-center">
                    <input type="submit" value="Save" id="saveButton" class="btn btn-success rounded-pill btn-lg mx-2 col-9" />
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function uploadImage(event) {
            var file = event.target.files[0];
            var fileTypes = ['image/jpeg', 'image/png', 'image/gif'];
            var oldImageUrl = $('#ImageUrl').val();
            if (file && fileTypes.includes(file.type)) {
                var formData = new FormData();
                formData.append('file', file);
                formData.append('oldImageUrl', oldImageUrl);

                $('#loadingContainer').show();
                $('#saveButton').prop('disabled', true);

                $.ajax({
                    url: '@Url.Action("UploadImage", "MenuManagement")',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        $('#ImageUrl').val(data.imageUrl);
                        $('#imagePreview').attr('src', data.imageUrl).show();
                        $('#loadingContainer').hide();
                        $('#saveButton').prop('disabled', false);
                    },
                    error: function () {
                        alert('Error uploading image. Please try again.');
                        $('#loadingContainer').hide();
                        $('#saveButton').prop('disabled', false);
                    }
                });
            } else {
                alert('Please select a valid image file (jpg, png, gif).');
                event.target.value = ''; // Clear the input
                $('#imagePreview').hide();
                $('#loadingContainer').hide();
                $('#saveButton').prop('disabled', false);
            }
        }

        $(document).ready(function () {
            $('.btn-secondary').click(function (event) {
                var unsavedImageUrl = $('#ImageUrl').val();
                if (unsavedImageUrl) {
                    var formData = new FormData();
                    formData.append('unsavedImageUrl', unsavedImageUrl);

                    $.ajax({
                        url: '@Url.Action("DeleteUnsavedImage", "MenuManagement")',
                        type: 'POST',
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (data) {
                            console.log('Unsaved image deleted successfully');
                        },
                        error: function () {
                            console.log('Error deleting unsaved image');
                        }
                    });
                }
            });
        });
    </script>
}
