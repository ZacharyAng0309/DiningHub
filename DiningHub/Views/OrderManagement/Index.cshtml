@using DiningHub.Helpers
@model PaginatedList<DiningHub.Models.Order>

@* <h2>Order Management</h2>

<form method="get" action="">
    <div class="row mb-3">
        <div class="col-md-4">
            <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" class="form-control" placeholder="Search for orders..." />
        </div>
        <div class="col-md-4 text-end">
            <button type="submit" class="btn btn-primary">Filter</button>
        </div>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["OrderDateSortParm"]">Order Date</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["TotalAmountSortParm"]">Total Amount</a>
            </th>
            <th>User</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var order in Model)
        {
            <tr>
                <td>@order.OrderDate</td>
                <td>@order.TotalAmount</td>
                <td>@order.User.UserName</td>
                <td>
                    <a asp-action="Details" asp-route-id="@order.OrderId">View Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="d-flex justify-content-center">
    <nav>
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="?page=@(Model.PageNumber - 1)@(string.IsNullOrEmpty(ViewData["CurrentSort"]?.ToString()) ? "" : "&sortOrder=" + ViewData["CurrentSort"])@(string.IsNullOrEmpty(ViewData["CurrentFilter"]?.ToString()) ? "" : "&searchString=" + ViewData["CurrentFilter"])">Previous</a>
                </li>
            }
            @for (var i = 1; i <= Model.PageCount; i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" href="?page=@i@(string.IsNullOrEmpty(ViewData["CurrentSort"]?.ToString()) ? "" : "&sortOrder=" + ViewData["CurrentSort"])@(string.IsNullOrEmpty(ViewData["CurrentFilter"]?.ToString()) ? "" : "&searchString=" + ViewData["CurrentFilter"])">@i</a>
                </li>
            }
            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="?page=@(Model.PageNumber + 1)@(string.IsNullOrEmpty(ViewData["CurrentSort"]?.ToString()) ? "" : "&sortOrder=" + ViewData["CurrentSort"])@(string.IsNullOrEmpty(ViewData["CurrentFilter"]?.ToString()) ? "" : "&searchString=" + ViewData["CurrentFilter"])">Next</a>
                </li>
            }
        </ul>
    </nav>
</div>
 *@

<div class="container">
    <div class="table-wrapper">
        <div class="table-title">
            <div class="row d-flex justify-content-between align-items-center">
                <div class="col-sm-3">
                    <h2>Order Management</h2>
                </div>
                <div class="col-sm-6">
                    <form method="get" class="d-flex justify-content-center">
                      
                            <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" class="form-control" placeholder="Search for orders..." />
                            <button type="submit" class="btn btn-primary mx-2">Filter</button>
                        
                    </form>
                </div>
                
            </div>
        </div>

        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@ViewData["OrderDateSortParm"]">
                            Order Date
                            @if (ViewData["CurrentSort"]?.ToString() == "order_date_desc")
                            {
                                <i class="bi bi-arrow-down"></i>
                            }
                            else
                            {
                                <i class="bi bi-arrow-up"></i>
                            }
                        </a>
                    </th>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@ViewData["TotalAmountSortParm"]">
                            Total Amount
                            @if (ViewData["CurrentSort"]?.ToString() == "total_amount_desc")
                            {
                                <i class="bi bi-arrow-down"></i>
                            }
                            else
                            {
                                <i class="bi bi-arrow-up"></i>
                            }
                        </a>
                    </th>
                    <th>User</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model)
                {
                    <tr>
                        <td>@order.OrderDate</td>
                        <td>@order.TotalAmount</td>
                        <td>@order.User.UserName</td>
                        <td>
                            <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#detailsModal-@order.OrderId">Details</button>
                            <a asp-action="Edit" asp-route-id="@order.OrderId" class="btn btn-primary">Edit</a>
                            <form method="post" asp-action="Delete" asp-route-id="@order.OrderId" class="d-inline">
                                <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this order?');">Delete</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="d-flex justify-content-center">
            <nav>
                <ul class="pagination">
                    @if (Model.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="?page=@(Model.PageNumber - 1)@(string.IsNullOrEmpty(ViewData["CurrentSort"]?.ToString()) ? "" : "&sortOrder=" + ViewData["CurrentSort"])@(string.IsNullOrEmpty(ViewData["CurrentFilter"]?.ToString()) ? "" : "&searchString=" + ViewData["CurrentFilter"])">Previous</a>
                        </li>
                    }
                    @for (var i = 1; i <= Model.PageCount; i++)
                    {
                        <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                            <a class="page-link" href="?page=@i@(string.IsNullOrEmpty(ViewData["CurrentSort"]?.ToString()) ? "" : "&sortOrder=" + ViewData["CurrentSort"])@(string.IsNullOrEmpty(ViewData["CurrentFilter"]?.ToString()) ? "" : "&searchString=" + ViewData["CurrentFilter"])">@i</a>
                        </li>
                    }
                    @if (Model.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="?page=@(Model.PageNumber + 1)@(string.IsNullOrEmpty(ViewData["CurrentSort"]?.ToString()) ? "" : "&sortOrder=" + ViewData["CurrentSort"])@(string.IsNullOrEmpty(ViewData["CurrentFilter"]?.ToString()) ? "" : "&searchString=" + ViewData["CurrentFilter"])">Next</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>
</div>


<!-- Modal Templates -->
@foreach (var order in Model)
{
    <div class="modal fade" id="detailsModal-@order.OrderId" tabindex="-1" aria-labelledby="detailsModalLabel-@order.OrderId" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="detailsModalLabel-@order.OrderId">Order Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <h4>Order</h4>
                    <hr />
                    <dl class="row">
                        <dt class="col-sm-2">Order ID</dt>
                        <dd class="col-sm-10">@order.OrderId</dd>

                        <dt class="col-sm-2">Order Date</dt>
                        <dd class="col-sm-10">@order.OrderDate.ToString("g")</dd>

                        <dt class="col-sm-2">User</dt>
                        <dd class="col-sm-10">@order.User.UserName</dd>

                        <dt class="col-sm-2">Total Amount</dt>
                        <dd class="col-sm-10">@order.TotalAmount.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("ms-MY"))</dd>

                        <dt class="col-sm-2">Payment Method</dt>
                        <dd class="col-sm-10">@order.PaymentMethod</dd>

                        <dt class="col-sm-2">Payment Date</dt>
                        <dd class="col-sm-10">@order.PaymentDate?.ToString("g")</dd>

                        <dt class="col-sm-2">Created At</dt>
                        <dd class="col-sm-10">@order.CreatedAt.ToString("g")</dd>

                        <dt class="col-sm-2">Items</dt>
                        <dd class="col-sm-10">
                            <ul>
                                @foreach (var item in order.OrderItems)
                                {
                                    <li>@item.MenuItem.Name - @item.Quantity x @item.Price.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("ms-MY"))</li>
                                }
                            </ul>
                        </dd>

                        @if (order.Feedback != null)
                        {
                            <dt class="col-sm-2">Feedback</dt>
                            <dd class="col-sm-10">
                                <strong>Rating:</strong> @order.Feedback.Rating/5 <br />
                                <strong>Comments:</strong> @order.Feedback.Comments <br />
                                <strong>Date:</strong> @order.Feedback.Date.ToString("g") <br />
                                <strong>Provided by:</strong> @order.Feedback.User.UserName
                            </dd>
                        }
                    </dl>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}